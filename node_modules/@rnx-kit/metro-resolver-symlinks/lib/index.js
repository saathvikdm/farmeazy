"use strict";
const tools_node_1 = require("@rnx-kit/tools-node");
const resolver_1 = require("./resolver");
const remapImportPath_1 = require("./utils/remapImportPath");
function makeResolver({ remapModule = (_, moduleName, __) => moduleName, } = {}) {
    const resolve = (0, resolver_1.getMetroResolver)();
    const resolvers = [remapModule, resolver_1.remapReactNativeModule, resolver_1.resolveModulePath];
    return (context, moduleName, platform) => {
        if (!platform) {
            throw new Error("No platform was specified");
        }
        const backupResolveRequest = context.resolveRequest;
        delete context.resolveRequest;
        const modifiedModuleName = resolvers.reduce((modifiedName, remap) => remap(context, modifiedName, platform), moduleName);
        const resolution = resolve(context, (0, tools_node_1.normalizePath)(modifiedModuleName), platform);
        // Restoring `resolveRequest` must happen last
        context.resolveRequest = backupResolveRequest;
        return resolution;
    };
}
makeResolver.remapImportPath = remapImportPath_1.remapImportPath;
module.exports = makeResolver;
//# sourceMappingURL=index.js.map